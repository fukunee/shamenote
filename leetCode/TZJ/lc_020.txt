class Solution {
    public boolean isValid(String s) {
        int l = s.length();
        if (0 == l) return true;
        if (1 == l) return false;
        Stack<Character> stack = new Stack<>();
        Map<Character, Character> map = new HashMap<>();
        map.put('(', ')');
        map.put('[', ']');
        map.put('{', '}');
        if (!map.containsKey(s.charAt(0))) return false;
        stack.push(s.charAt(0));
        for (int i = 1; i < l; i++) {
            if (stack.empty()) {
                stack.push(s.charAt(i));
                continue;
            }
            if (map.containsKey(s.charAt(i))) {
                stack.push(s.charAt(i));
                continue;
            }
            if (map.get(stack.peek()).equals(s.charAt(i))) {
                stack.pop();
                continue;
            }
            return false;
        }
        if (stack.empty()) {
            return true;
        } else {
            return false;
        }
    }
}