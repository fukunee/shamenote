/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
import javafx.util.*;
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        LinkedList<Pair<Integer, TreeNode>> bfs = new LinkedList<>();
        bfs.add(new Pair<>(0, root));
        while (!bfs.isEmpty()) {
            Pair<Integer, TreeNode> p = bfs.poll();
            int level = p.getKey();
            TreeNode n = p.getValue();
            if (n != null) {
                if (ans.size() - 1 < level) {
                    ans.add(new ArrayList<>());
                }   
                ans.get(level).add(n.val);
                ++level;
                bfs.add(new Pair<>(level, n.left));
                bfs.add(new Pair<>(level, n.right));
            }
        }
        return ans;
    }
}